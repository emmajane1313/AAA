type CollectionDeleted @entity(immutable: false) {
  id: Bytes!
  artist: Bytes! # address
  collectionId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionCreated @entity(immutable: false) {
  id: Bytes!
  artist: Bytes! # address
  collectionId: BigInt! # uint256
  dropId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  uri: String
  metadata: CollectionMetadata
  prices: [BigInt!]
  tokens: [Bytes!]
  agents: [BigInt!]
  amountSold: BigInt
  tokenIds: [BigInt!]
  amount: BigInt!
}

type DropCreated @entity(immutable: false) {
  id: Bytes!
  artist: Bytes! # address
  dropId: BigInt! # uint256
  uri: String
  metadata: DropMetadata
  collectionIds: [BigInt!]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DropDeleted @entity(immutable: false) {
  id: Bytes!
  artist: Bytes! # address
  dropId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AgentCreated @entity(immutable: false) {
  id: Bytes!
  wallet: Bytes! # address
  creator: Bytes! # address
  AAAAgents_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  uri: String
  metadata: AgentMetadata
  balances: [Balance!]
}

type Balance @entity(immutable: false) {
  id: Bytes!
  token: Bytes!
  activeBalance: BigInt!
  totalBalance: BigInt!
  collectionId: BigInt!
  collection: CollectionCreated
}

type AgentDeleted @entity(immutable: false) {
  id: Bytes!
  AAAAgents_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AgentEdited @entity(immutable: false) {
  id: Bytes!
  AAAAgents_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BalanceAdded @entity(immutable: false) {
  id: Bytes!
  token: Bytes! # address
  agentId: BigInt! # uint256
  amount: BigInt! # uint256
  collectionId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BalanceWithdrawn @entity(immutable: false) {
  id: Bytes!
  token: Bytes! # address
  agentId: BigInt! # uint256
  amount: BigInt! # uint256
  collectionId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type CollectionPurchased @entity(immutable: false) {
  id: Bytes!
  collectionId: BigInt! # uint256
  buyer: Bytes! # address
  amount: BigInt! # uint256
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionMetadata @entity(immutable: false) {
  id: ID!
  title: String!
  description: String!
  image: String!
}

type DropMetadata @entity(immutable: false) {
  id: ID!
  title: String!
  cover: String!
}

type AgentMetadata @entity(immutable: false) {
  id: ID!
  title: String!
  description: String!
  cover: String!
}

type Order @entity(immutable: false) {
  id: Bytes!
  totalPrice: BigInt!
  token: Bytes!
  amount: BigInt!
  buyer: Bytes!
  collectionId: BigInt!
  mintedTokenIds: [BigInt!]
  blockTimestamp: BigInt!
  collection: CollectionCreated
  transactionHash: Bytes!
}

type AgentActiveCollection @entity(immutable: false) {
  id: Bytes!
  agentId: BigInt!
  collections: [CollectionCreated!]
}
